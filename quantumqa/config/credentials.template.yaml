# QuantumQA Credentials Template
# Copy this file to credentials.yaml and fill in your actual values
# DO NOT commit credentials.yaml to version control!

# Example Application Credentials
aihub:
  email: "your-email@company.com"
  password: "your-secure-password"

# Database Connection
database:
  username: "db_username"
  password: "db_password"
  host: "localhost"
  port: 5432
  database: "test_db"

# API Credentials
api:
  key: "your-api-key"
  secret: "your-api-secret"
  base_url: "https://api.example.com"

# Social Login Credentials
google:
  email: "test@gmail.com"
  password: "google_app_password"

github:
  username: "your-username"
  token: "github_personal_access_token"

# Multi-environment Support
environments:
  dev:
    app:
      email: "dev-user@company.com"
      password: "dev-password"
    database:
      host: "dev-db.company.com"
  
  staging:
    app:
      email: "staging-user@company.com"
      password: "staging-password"
    database:
      host: "staging-db.company.com"
      
  prod:
    app:
      email: "prod-user@company.com"
      password: "encrypted:your-encrypted-production-password"
    database:
      host: "prod-db.company.com"

# Usage Examples:
# In your test instructions, reference credentials like:
# Type {cred:aihub.email} in email field
# Type {cred:aihub.password} in password field
# Navigate to {cred:api.base_url}
# Type {cred:environments.dev.app.password} in password field

# Security Notes:
# 1. Set file permissions: chmod 600 credentials.yaml
# 2. Add to .gitignore (already done)
# 3. Use encryption for production: password: "encrypted:..."
# 4. Set QUANTUMQA_ENCRYPTION_KEY environment variable for encrypted values
# 5. Never commit actual credentials to version control!
